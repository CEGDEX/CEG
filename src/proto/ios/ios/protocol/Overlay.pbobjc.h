// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: overlay.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ConsensusValue;
@class LedgerUpgrade;
@class Peer;
@class Signature;
GPB_ENUM_FWD_DECLARE(ERRORCODE);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum OVERLAY_MESSAGE_TYPE

typedef GPB_ENUM(OVERLAY_MESSAGE_TYPE) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OVERLAY_MESSAGE_TYPE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypeNone = 0,
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypePing = 1,
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypeHello = 2,
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypePeers = 3,
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypeTransaction = 4,
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypeLedgers = 5,
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypePbft = 6,

  /** broadcast the ledger upgrade status */
  OVERLAY_MESSAGE_TYPE_OverlayMsgtypeLedgerUpgradeNotify = 7,
};

GPBEnumDescriptor *OVERLAY_MESSAGE_TYPE_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OVERLAY_MESSAGE_TYPE_IsValidValue(int32_t value);

#pragma mark - Enum ChainMessageType

/** message interfaces for java */
typedef GPB_ENUM(ChainMessageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ChainMessageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChainMessageType_ChainTypeNone = 0,

  /** response with CHAIN_STATUS = 2; */
  ChainMessageType_ChainHello = 10,
  ChainMessageType_ChainTxStatus = 11,
  ChainMessageType_ChainPeerOnline = 12,
  ChainMessageType_ChainPeerOffline = 13,
  ChainMessageType_ChainPeerMessage = 14,
  ChainMessageType_ChainSubmittransaction = 15,

  /** CEG notify the client ledger(protocol::LedgerHeader) when closed */
  ChainMessageType_ChainLedgerHeader = 16,

  /** response with CHAIN_RESPONSE */
  ChainMessageType_ChainSubscribeTx = 17,
  ChainMessageType_ChainTxEnvStore = 18,
};

GPBEnumDescriptor *ChainMessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChainMessageType_IsValidValue(int32_t value);

#pragma mark - Enum Ledgers_SyncCode

typedef GPB_ENUM(Ledgers_SyncCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Ledgers_SyncCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 成功 */
  Ledgers_SyncCode_Ok = 0,

  /** 节点本身处于非同步状态 */
  Ledgers_SyncCode_OutOfSync = 1,

  /** 请求的ledger数过多 */
  Ledgers_SyncCode_OutOfLedgers = 2,

  /** 本节点正忙 */
  Ledgers_SyncCode_Busy = 3,

  /** 节点本身不允许同步 */
  Ledgers_SyncCode_Refuse = 4,

  /** 内部错误 */
  Ledgers_SyncCode_Internal = 5,
};

GPBEnumDescriptor *Ledgers_SyncCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Ledgers_SyncCode_IsValidValue(int32_t value);

#pragma mark - Enum ChainTxStatus_TxStatus

typedef GPB_ENUM(ChainTxStatus_TxStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ChainTxStatus_TxStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChainTxStatus_TxStatus_Undefined = 0,

  /** web server will check tx paramters, signatures etc fist, noitfy CONFIRMED if pass */
  ChainTxStatus_TxStatus_Confirmed = 1,

  /** master will check futher before put it into pending queue */
  ChainTxStatus_TxStatus_Pending = 2,

  /** notify if Tx write ledger successfully */
  ChainTxStatus_TxStatus_Complete = 3,

  /** notify once failure and set error_code */
  ChainTxStatus_TxStatus_Failure = 4,
};

GPBEnumDescriptor *ChainTxStatus_TxStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChainTxStatus_TxStatus_IsValidValue(int32_t value);

#pragma mark - OverlayRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface OverlayRoot : GPBRootObject
@end

#pragma mark - Hello

typedef GPB_ENUM(Hello_FieldNumber) {
  Hello_FieldNumber_NetworkId = 1,
  Hello_FieldNumber_LedgerVersion = 2,
  Hello_FieldNumber_OverlayVersion = 3,
  Hello_FieldNumber_CEGVersion = 4,
  Hello_FieldNumber_ListeningPort = 5,
  Hello_FieldNumber_NodeAddress = 6,
  Hello_FieldNumber_NodeRand = 7,
};

@interface Hello : GPBMessage

@property(nonatomic, readwrite) int64_t networkId;

@property(nonatomic, readwrite) int64_t ledgerVersion;

@property(nonatomic, readwrite) int64_t overlayVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *CEGVersion;

@property(nonatomic, readwrite) int64_t listeningPort;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nodeAddress;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nodeRand;

@end

#pragma mark - HelloResponse

typedef GPB_ENUM(HelloResponse_FieldNumber) {
  HelloResponse_FieldNumber_ErrorCode = 1,
  HelloResponse_FieldNumber_ErrorDesc = 2,
};

@interface HelloResponse : GPBMessage

@property(nonatomic, readwrite) enum ERRORCODE errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorDesc;

@end

/**
 * Fetches the raw value of a @c HelloResponse's @c errorCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t HelloResponse_ErrorCode_RawValue(HelloResponse *message);
/**
 * Sets the raw value of an @c HelloResponse's @c errorCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetHelloResponse_ErrorCode_RawValue(HelloResponse *message, int32_t value);

#pragma mark - Peer

typedef GPB_ENUM(Peer_FieldNumber) {
  Peer_FieldNumber_Ip = 1,
  Peer_FieldNumber_Port = 2,
  Peer_FieldNumber_NumFailures = 3,
  Peer_FieldNumber_NextAttemptTime = 4,
  Peer_FieldNumber_ActiveTime = 5,
  Peer_FieldNumber_ConnectionId = 6,
};

/**
 * for peers message
 **/
@interface Peer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;

@property(nonatomic, readwrite) int64_t port;

@property(nonatomic, readwrite) int64_t numFailures;

@property(nonatomic, readwrite) int64_t nextAttemptTime;

@property(nonatomic, readwrite) int64_t activeTime;

@property(nonatomic, readwrite) int64_t connectionId;

@end

#pragma mark - Peers

typedef GPB_ENUM(Peers_FieldNumber) {
  Peers_FieldNumber_PeersArray = 1,
};

@interface Peers : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Peer*> *peersArray;
/** The number of items in @c peersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger peersArray_Count;

@end

#pragma mark - GetLedgers

typedef GPB_ENUM(GetLedgers_FieldNumber) {
  GetLedgers_FieldNumber_Begin = 1,
  GetLedgers_FieldNumber_End = 2,
  GetLedgers_FieldNumber_Timestamp = 3,
};

/**
 * for getledgers
 **/
@interface GetLedgers : GPBMessage

@property(nonatomic, readwrite) int64_t begin;

@property(nonatomic, readwrite) int64_t end;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - Ledgers

typedef GPB_ENUM(Ledgers_FieldNumber) {
  Ledgers_FieldNumber_ValuesArray = 1,
  Ledgers_FieldNumber_SyncCode = 2,
  Ledgers_FieldNumber_MaxSeq = 3,
  Ledgers_FieldNumber_Proof = 4,
};

/**
 * for ledgers
 **/
@interface Ledgers : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ConsensusValue*> *valuesArray;
/** The number of items in @c valuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valuesArray_Count;

@property(nonatomic, readwrite) Ledgers_SyncCode syncCode;

@property(nonatomic, readwrite) int64_t maxSeq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proof;

@end

/**
 * Fetches the raw value of a @c Ledgers's @c syncCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Ledgers_SyncCode_RawValue(Ledgers *message);
/**
 * Sets the raw value of an @c Ledgers's @c syncCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLedgers_SyncCode_RawValue(Ledgers *message, int32_t value);

#pragma mark - DontHave

typedef GPB_ENUM(DontHave_FieldNumber) {
  DontHave_FieldNumber_Type = 1,
  DontHave_FieldNumber_Hash_p = 2,
};

/**
 * for dont have
 **/
@interface DontHave : GPBMessage

@property(nonatomic, readwrite) int64_t type;

@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@end

#pragma mark - LedgerUpgradeNotify

typedef GPB_ENUM(LedgerUpgradeNotify_FieldNumber) {
  LedgerUpgradeNotify_FieldNumber_Nonce = 1,
  LedgerUpgradeNotify_FieldNumber_Upgrade = 2,
  LedgerUpgradeNotify_FieldNumber_Signature = 3,
};

/**
 * for ledger upgrade
 **/
@interface LedgerUpgradeNotify : GPBMessage

/** for broadcast */
@property(nonatomic, readwrite) int64_t nonce;

@property(nonatomic, readwrite, strong, null_resettable) LedgerUpgrade *upgrade;
/** Test to see if @c upgrade has been set. */
@property(nonatomic, readwrite) BOOL hasUpgrade;

/** consensus sig */
@property(nonatomic, readwrite, strong, null_resettable) Signature *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@end

#pragma mark - EntryList

typedef GPB_ENUM(EntryList_FieldNumber) {
  EntryList_FieldNumber_EntryArray = 1,
};

/**
 * for key value db storage
 **/
@interface EntryList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *entryArray;
/** The number of items in @c entryArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger entryArray_Count;

@end

#pragma mark - ChainHello

typedef GPB_ENUM(ChainHello_FieldNumber) {
  ChainHello_FieldNumber_ApiListArray = 1,
  ChainHello_FieldNumber_Timestamp = 2,
};

/**
 * register notification events
 **/
@interface ChainHello : GPBMessage

/** default enable all apis */
// |apiListArray| contains |ChainMessageType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *apiListArray;
/** The number of items in @c apiListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger apiListArray_Count;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - ChainStatus

typedef GPB_ENUM(ChainStatus_FieldNumber) {
  ChainStatus_FieldNumber_SelfAddr = 1,
  ChainStatus_FieldNumber_LedgerVersion = 2,
  ChainStatus_FieldNumber_MonitorVersion = 3,
  ChainStatus_FieldNumber_CEGVersion = 4,
  ChainStatus_FieldNumber_Timestamp = 5,
};

/**
 * 1.ChainHello response
 * 2.async notification from local
 **/
@interface ChainStatus : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *selfAddr;

@property(nonatomic, readwrite) int64_t ledgerVersion;

@property(nonatomic, readwrite) int64_t monitorVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *CEGVersion;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - ChainPeerMessage

typedef GPB_ENUM(ChainPeerMessage_FieldNumber) {
  ChainPeerMessage_FieldNumber_SrcPeerAddr = 1,
  ChainPeerMessage_FieldNumber_DesPeerAddrsArray = 2,
  ChainPeerMessage_FieldNumber_Data_p = 3,
};

@interface ChainPeerMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *srcPeerAddr;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *desPeerAddrsArray;
/** The number of items in @c desPeerAddrsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger desPeerAddrsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - ChainSubscribeTx

typedef GPB_ENUM(ChainSubscribeTx_FieldNumber) {
  ChainSubscribeTx_FieldNumber_AddressArray = 1,
};

@interface ChainSubscribeTx : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *addressArray;
/** The number of items in @c addressArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger addressArray_Count;

@end

#pragma mark - ChainResponse

typedef GPB_ENUM(ChainResponse_FieldNumber) {
  ChainResponse_FieldNumber_ErrorCode = 1,
  ChainResponse_FieldNumber_ErrorDesc = 2,
};

@interface ChainResponse : GPBMessage

@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorDesc;

@end

#pragma mark - ChainTxStatus

typedef GPB_ENUM(ChainTxStatus_FieldNumber) {
  ChainTxStatus_FieldNumber_Status = 1,
  ChainTxStatus_FieldNumber_TxHash = 2,
  ChainTxStatus_FieldNumber_SourceAddress = 3,
  ChainTxStatus_FieldNumber_SourceAccountSeq = 4,
  ChainTxStatus_FieldNumber_LedgerSeq = 5,
  ChainTxStatus_FieldNumber_NewAccountSeq = 6,
  ChainTxStatus_FieldNumber_ErrorCode = 7,
  ChainTxStatus_FieldNumber_ErrorDesc = 8,
  ChainTxStatus_FieldNumber_Timestamp = 9,
};

@interface ChainTxStatus : GPBMessage

@property(nonatomic, readwrite) ChainTxStatus_TxStatus status;

@property(nonatomic, readwrite, copy, null_resettable) NSString *txHash;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceAddress;

@property(nonatomic, readwrite) int64_t sourceAccountSeq;

/** on which block this tx records */
@property(nonatomic, readwrite) int64_t ledgerSeq;

/** new account sequence if COMPLETE */
@property(nonatomic, readwrite) int64_t newAccountSeq;

/** use it if FAIL */
@property(nonatomic, readwrite) enum ERRORCODE errorCode;

/** error desc */
@property(nonatomic, readwrite, copy, null_resettable) NSString *errorDesc;

@property(nonatomic, readwrite) int64_t timestamp;

@end

/**
 * Fetches the raw value of a @c ChainTxStatus's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ChainTxStatus_Status_RawValue(ChainTxStatus *message);
/**
 * Sets the raw value of an @c ChainTxStatus's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetChainTxStatus_Status_RawValue(ChainTxStatus *message, int32_t value);

/**
 * Fetches the raw value of a @c ChainTxStatus's @c errorCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ChainTxStatus_ErrorCode_RawValue(ChainTxStatus *message);
/**
 * Sets the raw value of an @c ChainTxStatus's @c errorCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetChainTxStatus_ErrorCode_RawValue(ChainTxStatus *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ERRORCODE

typedef GPB_ENUM(ERRORCODE) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ERRORCODE_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ERRORCODE_ErrcodeSuccess = 0,
  ERRORCODE_ErrcodeInternalError = 1,
  ERRORCODE_ErrcodeInvalidParameter = 2,
  ERRORCODE_ErrcodeAlreadyExist = 3,
  ERRORCODE_ErrcodeNotExist = 4,
  ERRORCODE_ErrcodeTxTimeout = 5,
  ERRORCODE_ErrcodeAccessDenied = 6,
  ERRORCODE_ErrcodeMathOverflow = 7,
  ERRORCODE_ErrcodeExprConditionResultFalse = 20,
  ERRORCODE_ErrcodeExprConditionSyntaxError = 21,

  /** UNUSED */
  ERRORCODE_ErrcodeInvalidPubkey = 90,
  ERRORCODE_ErrcodeInvalidPrikey = 91,
  ERRORCODE_ErrcodeAssetInvalid = 92,
  ERRORCODE_ErrcodeInvalidSignature = 93,
  ERRORCODE_ErrcodeInvalidAddress = 94,
  ERRORCODE_ErrcodeMissingOperations = 97,
  ERRORCODE_ErrcodeTooManyOperations = 98,
  ERRORCODE_ErrcodeBadSequence = 99,

  /** CEG LOW RESERVE */
  ERRORCODE_ErrcodeAccountLowReserve = 100,
  ERRORCODE_ErrcodeAccountSourcedestEqual = 101,
  ERRORCODE_ErrcodeAccountDestExist = 102,
  ERRORCODE_ErrcodeAccountNotExist = 103,

  /** IOU LOW RESERVE */
  ERRORCODE_ErrcodeAccountAssetLowReserve = 104,
  ERRORCODE_ErrcodeAccountAssetAmountTooLarge = 105,
  ERRORCODE_ErrcodeAccountInitLowReserve = 106,
  ERRORCODE_ErrcodeFeeNotEnough = 111,
  ERRORCODE_ErrcodeFeeInvalid = 112,
  ERRORCODE_ErrcodeOutOfTxcache = 114,
  ERRORCODE_ErrcodeWeightNotValid = 120,
  ERRORCODE_ErrcodeThresholdNotValid = 121,

  /** metadata version error */
  ERRORCODE_ErrcodeInvalidDataversion = 144,
  ERRORCODE_ErrcodeTxSizeTooBig = 146,
  ERRORCODE_ErrcodeContractExecuteFail = 151,
  ERRORCODE_ErrcodeContractSyntaxError = 152,
  ERRORCODE_ErrcodeContractTooManyRecursion = 153,
  ERRORCODE_ErrcodeContractTooManyTransactions = 154,
  ERRORCODE_ErrcodeContractExecuteExpired = 155,
  ERRORCODE_ErrcodeTxInsertQueueFail = 160,
};

GPBEnumDescriptor *ERRORCODE_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ERRORCODE_IsValidValue(int32_t value);

#pragma mark - CommonRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CommonRoot : GPBRootObject
@end

#pragma mark - KeyPair

typedef GPB_ENUM(KeyPair_FieldNumber) {
  KeyPair_FieldNumber_Key = 1,
  KeyPair_FieldNumber_Value = 2,
  KeyPair_FieldNumber_Version = 3,
};

@interface KeyPair : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@property(nonatomic, readwrite) int64_t version;

@end

#pragma mark - Signature

typedef GPB_ENUM(Signature_FieldNumber) {
  Signature_FieldNumber_PublicKey = 1,
  Signature_FieldNumber_SignData = 2,
};

@interface Signature : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *publicKey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *signData;

@end

#pragma mark - LedgerUpgrade

typedef GPB_ENUM(LedgerUpgrade_FieldNumber) {
  LedgerUpgrade_FieldNumber_NewLedgerVersion = 1,
  LedgerUpgrade_FieldNumber_NewValidator = 2,
};

@interface LedgerUpgrade : GPBMessage

/** will be process as required at verion 2.1.0.0 */
@property(nonatomic, readwrite) int64_t newLedgerVersion;

/** for hardfork */
@property(nonatomic, readwrite, copy, null_resettable) NSString *newValidator NS_RETURNS_NOT_RETAINED;

@end

#pragma mark - WsMessage

typedef GPB_ENUM(WsMessage_FieldNumber) {
  WsMessage_FieldNumber_Type = 1,
  WsMessage_FieldNumber_Request = 2,
  WsMessage_FieldNumber_Sequence = 3,
  WsMessage_FieldNumber_Data_p = 4,
};

@interface WsMessage : GPBMessage

/** 1: ping */
@property(nonatomic, readwrite) int64_t type;

/** true :request , false:reponse */
@property(nonatomic, readwrite) BOOL request;

@property(nonatomic, readwrite) int64_t sequence;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - Ping

typedef GPB_ENUM(Ping_FieldNumber) {
  Ping_FieldNumber_Nonce = 1,
};

/**
 * for ping messsage
 **/
@interface Ping : GPBMessage

@property(nonatomic, readwrite) int64_t nonce;

@end

#pragma mark - Pong

typedef GPB_ENUM(Pong_FieldNumber) {
  Pong_FieldNumber_Nonce = 1,
};

/**
 * for pong message
 **/
@interface Pong : GPBMessage

@property(nonatomic, readwrite) int64_t nonce;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

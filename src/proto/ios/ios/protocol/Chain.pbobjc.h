// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chain.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AccountPrivilege;
@class AccountThreshold;
@class Asset;
@class AssetKey;
@class AssetProperty;
@class ConsensusValueValidation;
@class Contract;
@class KeyPair;
@class LedgerHeader;
@class LedgerUpgrade;
@class Operation;
@class OperationCreateAccount;
@class OperationIssueAsset;
@class OperationLog;
@class OperationPayAsset;
@class OperationPayCoin;
@class OperationSetMetadata;
@class OperationSetPrivilege;
@class OperationSetSignerWeight;
@class OperationSetThreshold;
@class OperationTypeThreshold;
@class Signature;
@class Signer;
@class Transaction;
@class TransactionEnv;
@class TransactionEnvSet;
@class Trigger;
@class Trigger_OperationTrigger;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Limit

typedef GPB_ENUM(Limit) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Limit_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Limit_Unknown = 0,
  Limit_Signature = 100,
};

GPBEnumDescriptor *Limit_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Limit_IsValidValue(int32_t value);

#pragma mark - Enum Operation_Type

typedef GPB_ENUM(Operation_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Operation_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Operation_Type_Unknown = 0,
  Operation_Type_CreateAccount = 1,
  Operation_Type_IssueAsset = 2,
  Operation_Type_PayAsset = 3,
  Operation_Type_SetMetadata = 4,
  Operation_Type_SetSignerWeight = 5,
  Operation_Type_SetThreshold = 6,
  Operation_Type_PayCoin = 7,
  Operation_Type_Log = 8,
  Operation_Type_SetPrivilege = 9,
};

GPBEnumDescriptor *Operation_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Operation_Type_IsValidValue(int32_t value);

#pragma mark - Enum Transaction_Limit

typedef GPB_ENUM(Transaction_Limit) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Transaction_Limit_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Transaction_Limit_Unknown = 0,
  Transaction_Limit_Operations = 1000,
};

GPBEnumDescriptor *Transaction_Limit_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Transaction_Limit_IsValidValue(int32_t value);

#pragma mark - Enum Signer_Limit

typedef GPB_ENUM(Signer_Limit) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Signer_Limit_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Signer_Limit_SignerNone = 0,
  Signer_Limit_Signer = 100,
};

GPBEnumDescriptor *Signer_Limit_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Signer_Limit_IsValidValue(int32_t value);

#pragma mark - Enum Trigger_TransactionType

typedef GPB_ENUM(Trigger_TransactionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Trigger_TransactionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Trigger_TransactionType_NormalTransaction = 0,
  Trigger_TransactionType_ContractTransaction = 1,
};

GPBEnumDescriptor *Trigger_TransactionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Trigger_TransactionType_IsValidValue(int32_t value);

#pragma mark - Enum Contract_ContractType

typedef GPB_ENUM(Contract_ContractType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Contract_ContractType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Contract_ContractType_Javascript = 0,
};

GPBEnumDescriptor *Contract_ContractType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Contract_ContractType_IsValidValue(int32_t value);

#pragma mark - ChainRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ChainRoot : GPBRootObject
@end

#pragma mark - Account

typedef GPB_ENUM(Account_FieldNumber) {
  Account_FieldNumber_Address = 1,
  Account_FieldNumber_Nonce = 2,
  Account_FieldNumber_Priv = 3,
  Account_FieldNumber_MetadatasHash = 4,
  Account_FieldNumber_AssetsHash = 5,
  Account_FieldNumber_Contract = 6,
  Account_FieldNumber_Balance = 7,
};

@interface Account : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

/** last transaction seq */
@property(nonatomic, readwrite) int64_t nonce;

@property(nonatomic, readwrite, strong, null_resettable) AccountPrivilege *priv;
/** Test to see if @c priv has been set. */
@property(nonatomic, readwrite) BOOL hasPriv;

/** metadatas_hash = merklehash(metadatas); */
@property(nonatomic, readwrite, copy, null_resettable) NSData *metadatasHash;

/** assets_hash = merkelhash(assets) */
@property(nonatomic, readwrite, copy, null_resettable) NSData *assetsHash;

@property(nonatomic, readwrite, strong, null_resettable) Contract *contract;
/** Test to see if @c contract has been set. */
@property(nonatomic, readwrite) BOOL hasContract;

@property(nonatomic, readwrite) int64_t balance;

@end

#pragma mark - AssetKey

typedef GPB_ENUM(AssetKey_FieldNumber) {
  AssetKey_FieldNumber_Issuer = 1,
  AssetKey_FieldNumber_Code = 2,
  AssetKey_FieldNumber_Type = 3,
};

@interface AssetKey : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *issuer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

/** 0:not limited ammount */
@property(nonatomic, readwrite) int32_t type;

@end

#pragma mark - Asset

typedef GPB_ENUM(Asset_FieldNumber) {
  Asset_FieldNumber_Key = 1,
  Asset_FieldNumber_Amount = 2,
};

/**
 * payAsset
 **/
@interface Asset : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AssetKey *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite) int64_t amount;

@end

#pragma mark - AssetProperty

typedef GPB_ENUM(AssetProperty_FieldNumber) {
  AssetProperty_FieldNumber_Decimal = 1,
  AssetProperty_FieldNumber_Description_p = 2,
  AssetProperty_FieldNumber_MaxSupply = 3,
  AssetProperty_FieldNumber_IssuedAmount = 4,
  AssetProperty_FieldNumber_FeePercent = 5,
};

@interface AssetProperty : GPBMessage

@property(nonatomic, readwrite) int32_t decimal;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite) int64_t maxSupply;

@property(nonatomic, readwrite) int64_t issuedAmount;

@property(nonatomic, readwrite) int32_t feePercent;

@end

#pragma mark - AssetStore

typedef GPB_ENUM(AssetStore_FieldNumber) {
  AssetStore_FieldNumber_Key = 1,
  AssetStore_FieldNumber_Amount = 2,
  AssetStore_FieldNumber_Property = 3,
};

@interface AssetStore : GPBMessage

/** required */
@property(nonatomic, readwrite, strong, null_resettable) AssetKey *key;
/** Test to see if @c key has been set. */
@property(nonatomic, readwrite) BOOL hasKey;

@property(nonatomic, readwrite) int64_t amount;

@property(nonatomic, readwrite, strong, null_resettable) AssetProperty *property;
/** Test to see if @c property has been set. */
@property(nonatomic, readwrite) BOOL hasProperty;

@end

#pragma mark - LedgerHeader

typedef GPB_ENUM(LedgerHeader_FieldNumber) {
  LedgerHeader_FieldNumber_Seq = 1,
  LedgerHeader_FieldNumber_Hash_p = 2,
  LedgerHeader_FieldNumber_PreviousHash = 3,
  LedgerHeader_FieldNumber_AccountTreeHash = 4,
  LedgerHeader_FieldNumber_CloseTime = 5,
  LedgerHeader_FieldNumber_ConsensusValueHash = 6,
  LedgerHeader_FieldNumber_Version = 7,
  LedgerHeader_FieldNumber_TxCount = 8,
  LedgerHeader_FieldNumber_ValidatorsHash = 9,
  LedgerHeader_FieldNumber_FeesHash = 10,
  LedgerHeader_FieldNumber_Reserve = 11,
};

@interface LedgerHeader : GPBMessage

@property(nonatomic, readwrite) int64_t seq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@property(nonatomic, readwrite, copy, null_resettable) NSData *previousHash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *accountTreeHash;

@property(nonatomic, readwrite) int64_t closeTime;

@property(nonatomic, readwrite, copy, null_resettable) NSData *consensusValueHash;

@property(nonatomic, readwrite) int64_t version;

@property(nonatomic, readwrite) int64_t txCount;

/** hash */
@property(nonatomic, readwrite, copy, null_resettable) NSData *validatorsHash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *feesHash;

@property(nonatomic, readwrite, copy, null_resettable) NSString *reserve;

@end

#pragma mark - Ledger

typedef GPB_ENUM(Ledger_FieldNumber) {
  Ledger_FieldNumber_Header = 1,
  Ledger_FieldNumber_TransactionEnvsArray = 2,
};

@interface Ledger : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LedgerHeader *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TransactionEnv*> *transactionEnvsArray;
/** The number of items in @c transactionEnvsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transactionEnvsArray_Count;

@end

#pragma mark - OperationPayAsset

typedef GPB_ENUM(OperationPayAsset_FieldNumber) {
  OperationPayAsset_FieldNumber_DestAddress = 1,
  OperationPayAsset_FieldNumber_Asset = 2,
  OperationPayAsset_FieldNumber_Input = 3,
};

@interface OperationPayAsset : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *destAddress;

@property(nonatomic, readwrite, strong, null_resettable) Asset *asset;
/** Test to see if @c asset has been set. */
@property(nonatomic, readwrite) BOOL hasAsset;

@property(nonatomic, readwrite, copy, null_resettable) NSString *input;

@end

#pragma mark - OperationTypeThreshold

typedef GPB_ENUM(OperationTypeThreshold_FieldNumber) {
  OperationTypeThreshold_FieldNumber_Type = 1,
  OperationTypeThreshold_FieldNumber_Threshold = 2,
};

@interface OperationTypeThreshold : GPBMessage

@property(nonatomic, readwrite) Operation_Type type;

@property(nonatomic, readwrite) int64_t threshold;

@end

/**
 * Fetches the raw value of a @c OperationTypeThreshold's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t OperationTypeThreshold_Type_RawValue(OperationTypeThreshold *message);
/**
 * Sets the raw value of an @c OperationTypeThreshold's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOperationTypeThreshold_Type_RawValue(OperationTypeThreshold *message, int32_t value);

#pragma mark - AccountPrivilege

typedef GPB_ENUM(AccountPrivilege_FieldNumber) {
  AccountPrivilege_FieldNumber_MasterWeight = 1,
  AccountPrivilege_FieldNumber_SignersArray = 2,
  AccountPrivilege_FieldNumber_Thresholds = 3,
};

@interface AccountPrivilege : GPBMessage

@property(nonatomic, readwrite) int64_t masterWeight;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Signer*> *signersArray;
/** The number of items in @c signersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger signersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) AccountThreshold *thresholds;
/** Test to see if @c thresholds has been set. */
@property(nonatomic, readwrite) BOOL hasThresholds;

@end

#pragma mark - AccountThreshold

typedef GPB_ENUM(AccountThreshold_FieldNumber) {
  AccountThreshold_FieldNumber_TxThreshold = 1,
  AccountThreshold_FieldNumber_TypeThresholdsArray = 2,
};

@interface AccountThreshold : GPBMessage

/** required, [-1,MAX(INT64)] -1: indicate no setting */
@property(nonatomic, readwrite) int64_t txThreshold;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OperationTypeThreshold*> *typeThresholdsArray;
/** The number of items in @c typeThresholdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger typeThresholdsArray_Count;

@end

#pragma mark - OperationIssueAsset

typedef GPB_ENUM(OperationIssueAsset_FieldNumber) {
  OperationIssueAsset_FieldNumber_Code = 1,
  OperationIssueAsset_FieldNumber_Amount = 2,
};

@interface OperationIssueAsset : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *code;

@property(nonatomic, readwrite) int64_t amount;

@end

#pragma mark - OperationPayCoin

typedef GPB_ENUM(OperationPayCoin_FieldNumber) {
  OperationPayCoin_FieldNumber_DestAddress = 1,
  OperationPayCoin_FieldNumber_Amount = 2,
  OperationPayCoin_FieldNumber_Input = 3,
};

@interface OperationPayCoin : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *destAddress;

@property(nonatomic, readwrite) int64_t amount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *input;

@end

#pragma mark - OperationSetSignerWeight

typedef GPB_ENUM(OperationSetSignerWeight_FieldNumber) {
  OperationSetSignerWeight_FieldNumber_MasterWeight = 1,
  OperationSetSignerWeight_FieldNumber_SignersArray = 2,
};

@interface OperationSetSignerWeight : GPBMessage

/** required, [-1,MAX(UINT32)] -1: indicate no setting */
@property(nonatomic, readwrite) int64_t masterWeight;

/** address:weight, if weight is 0 indicate deleting this signer */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Signer*> *signersArray;
/** The number of items in @c signersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger signersArray_Count;

@end

#pragma mark - OperationLog

typedef GPB_ENUM(OperationLog_FieldNumber) {
  OperationLog_FieldNumber_Topic = 1,
  OperationLog_FieldNumber_DatasArray = 2,
};

@interface OperationLog : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *topic;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *datasArray;
/** The number of items in @c datasArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger datasArray_Count;

@end

#pragma mark - OperationSetPrivilege

typedef GPB_ENUM(OperationSetPrivilege_FieldNumber) {
  OperationSetPrivilege_FieldNumber_MasterWeight = 1,
  OperationSetPrivilege_FieldNumber_SignersArray = 2,
  OperationSetPrivilege_FieldNumber_TxThreshold = 3,
  OperationSetPrivilege_FieldNumber_TypeThresholdsArray = 4,
};

@interface OperationSetPrivilege : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *masterWeight;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Signer*> *signersArray;
/** The number of items in @c signersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger signersArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *txThreshold;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OperationTypeThreshold*> *typeThresholdsArray;
/** The number of items in @c typeThresholdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger typeThresholdsArray_Count;

@end

#pragma mark - Operation

typedef GPB_ENUM(Operation_FieldNumber) {
  Operation_FieldNumber_Type = 1,
  Operation_FieldNumber_SourceAddress = 2,
  Operation_FieldNumber_Metadata = 3,
  Operation_FieldNumber_CreateAccount = 4,
  Operation_FieldNumber_IssueAsset = 5,
  Operation_FieldNumber_PayAsset = 6,
  Operation_FieldNumber_SetMetadata = 7,
  Operation_FieldNumber_SetSignerWeight = 8,
  Operation_FieldNumber_SetThreshold = 9,
  Operation_FieldNumber_PayCoin = 10,
  Operation_FieldNumber_Log = 11,
  Operation_FieldNumber_SetPrivilege = 12,
};

@interface Operation : GPBMessage

@property(nonatomic, readwrite) Operation_Type type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceAddress;

@property(nonatomic, readwrite, copy, null_resettable) NSData *metadata;

@property(nonatomic, readwrite, strong, null_resettable) OperationCreateAccount *createAccount;
/** Test to see if @c createAccount has been set. */
@property(nonatomic, readwrite) BOOL hasCreateAccount;

@property(nonatomic, readwrite, strong, null_resettable) OperationIssueAsset *issueAsset;
/** Test to see if @c issueAsset has been set. */
@property(nonatomic, readwrite) BOOL hasIssueAsset;

@property(nonatomic, readwrite, strong, null_resettable) OperationPayAsset *payAsset;
/** Test to see if @c payAsset has been set. */
@property(nonatomic, readwrite) BOOL hasPayAsset;

@property(nonatomic, readwrite, strong, null_resettable) OperationSetMetadata *setMetadata;
/** Test to see if @c setMetadata has been set. */
@property(nonatomic, readwrite) BOOL hasSetMetadata;

@property(nonatomic, readwrite, strong, null_resettable) OperationSetSignerWeight *setSignerWeight;
/** Test to see if @c setSignerWeight has been set. */
@property(nonatomic, readwrite) BOOL hasSetSignerWeight;

@property(nonatomic, readwrite, strong, null_resettable) OperationSetThreshold *setThreshold;
/** Test to see if @c setThreshold has been set. */
@property(nonatomic, readwrite) BOOL hasSetThreshold;

@property(nonatomic, readwrite, strong, null_resettable) OperationPayCoin *payCoin;
/** Test to see if @c payCoin has been set. */
@property(nonatomic, readwrite) BOOL hasPayCoin;

@property(nonatomic, readwrite, strong, null_resettable) OperationLog *log;
/** Test to see if @c log has been set. */
@property(nonatomic, readwrite) BOOL hasLog;

@property(nonatomic, readwrite, strong, null_resettable) OperationSetPrivilege *setPrivilege;
/** Test to see if @c setPrivilege has been set. */
@property(nonatomic, readwrite) BOOL hasSetPrivilege;

@end

/**
 * Fetches the raw value of a @c Operation's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Operation_Type_RawValue(Operation *message);
/**
 * Sets the raw value of an @c Operation's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetOperation_Type_RawValue(Operation *message, int32_t value);

#pragma mark - OperationSetThreshold

typedef GPB_ENUM(OperationSetThreshold_FieldNumber) {
  OperationSetThreshold_FieldNumber_TxThreshold = 1,
  OperationSetThreshold_FieldNumber_TypeThresholdsArray = 2,
};

@interface OperationSetThreshold : GPBMessage

@property(nonatomic, readwrite) int64_t txThreshold;

/** type:threshold, threshold:0 indicate deleting this type */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OperationTypeThreshold*> *typeThresholdsArray;
/** The number of items in @c typeThresholdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger typeThresholdsArray_Count;

@end

#pragma mark - Transaction

typedef GPB_ENUM(Transaction_FieldNumber) {
  Transaction_FieldNumber_SourceAddress = 1,
  Transaction_FieldNumber_Nonce = 2,
  Transaction_FieldNumber_FeeLimit = 3,
  Transaction_FieldNumber_GasPrice = 4,
  Transaction_FieldNumber_CeilLedgerSeq = 5,
  Transaction_FieldNumber_Metadata = 6,
  Transaction_FieldNumber_OperationsArray = 7,
};

@interface Transaction : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceAddress;

@property(nonatomic, readwrite) int64_t nonce;

@property(nonatomic, readwrite) int64_t feeLimit;

@property(nonatomic, readwrite) int64_t gasPrice;

@property(nonatomic, readwrite) int64_t ceilLedgerSeq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *metadata;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Operation*> *operationsArray;
/** The number of items in @c operationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger operationsArray_Count;

@end

#pragma mark - Signer

typedef GPB_ENUM(Signer_FieldNumber) {
  Signer_FieldNumber_Address = 1,
  Signer_FieldNumber_Weight = 2,
};

@interface Signer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite) int64_t weight;

@end

#pragma mark - Trigger

typedef GPB_ENUM(Trigger_FieldNumber) {
  Trigger_FieldNumber_TransactionType = 1,
  Trigger_FieldNumber_LedgerSeq = 2,
  Trigger_FieldNumber_Transaction = 3,
};

@interface Trigger : GPBMessage

@property(nonatomic, readwrite) Trigger_TransactionType transactionType;

/** If it is triggered by a specific block (temporarily not provided) */
@property(nonatomic, readwrite) int64_t ledgerSeq;

/** If it's a transaction triggered */
@property(nonatomic, readwrite, strong, null_resettable) Trigger_OperationTrigger *transaction;
/** Test to see if @c transaction has been set. */
@property(nonatomic, readwrite) BOOL hasTransaction;

@end

/**
 * Fetches the raw value of a @c Trigger's @c transactionType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Trigger_TransactionType_RawValue(Trigger *message);
/**
 * Sets the raw value of an @c Trigger's @c transactionType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetTrigger_TransactionType_RawValue(Trigger *message, int32_t value);

#pragma mark - Trigger_OperationTrigger

typedef GPB_ENUM(Trigger_OperationTrigger_FieldNumber) {
  Trigger_OperationTrigger_FieldNumber_Hash_p = 1,
  Trigger_OperationTrigger_FieldNumber_Index = 2,
};

@interface Trigger_OperationTrigger : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@property(nonatomic, readwrite) int64_t index;

@end

#pragma mark - TransactionEnv

typedef GPB_ENUM(TransactionEnv_FieldNumber) {
  TransactionEnv_FieldNumber_Transaction = 1,
  TransactionEnv_FieldNumber_SignaturesArray = 2,
  TransactionEnv_FieldNumber_Trigger = 3,
};

@interface TransactionEnv : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Transaction *transaction;
/** Test to see if @c transaction has been set. */
@property(nonatomic, readwrite) BOOL hasTransaction;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Signature*> *signaturesArray;
/** The number of items in @c signaturesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger signaturesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Trigger *trigger;
/** Test to see if @c trigger has been set. */
@property(nonatomic, readwrite) BOOL hasTrigger;

@end

#pragma mark - TransactionEnvStore

typedef GPB_ENUM(TransactionEnvStore_FieldNumber) {
  TransactionEnvStore_FieldNumber_TransactionEnv = 1,
  TransactionEnvStore_FieldNumber_ErrorCode = 2,
  TransactionEnvStore_FieldNumber_ErrorDesc = 3,
  TransactionEnvStore_FieldNumber_LedgerSeq = 4,
  TransactionEnvStore_FieldNumber_CloseTime = 5,
  TransactionEnvStore_FieldNumber_Hash_p = 6,
  TransactionEnvStore_FieldNumber_ActualFee = 7,
};

@interface TransactionEnvStore : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) TransactionEnv *transactionEnv;
/** Test to see if @c transactionEnv has been set. */
@property(nonatomic, readwrite) BOOL hasTransactionEnv;

@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorDesc;

@property(nonatomic, readwrite) int64_t ledgerSeq;

@property(nonatomic, readwrite) int64_t closeTime;

/** for notify */
@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@property(nonatomic, readwrite) int64_t actualFee;

@end

#pragma mark - TransactionEnvSet

typedef GPB_ENUM(TransactionEnvSet_FieldNumber) {
  TransactionEnvSet_FieldNumber_TxsArray = 2,
};

@interface TransactionEnvSet : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TransactionEnv*> *txsArray;
/** The number of items in @c txsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger txsArray_Count;

@end

#pragma mark - ConsensusValueValidation

typedef GPB_ENUM(ConsensusValueValidation_FieldNumber) {
  ConsensusValueValidation_FieldNumber_ExpireTxIdsArray = 1,
  ConsensusValueValidation_FieldNumber_ErrorTxIdsArray = 2,
};

@interface ConsensusValueValidation : GPBMessage

/** contract execute expired */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *expireTxIdsArray;
/** The number of items in @c expireTxIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger expireTxIdsArray_Count;

/** may contain other check */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *errorTxIdsArray;
/** The number of items in @c errorTxIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger errorTxIdsArray_Count;

@end

#pragma mark - ConsensusValue

typedef GPB_ENUM(ConsensusValue_FieldNumber) {
  ConsensusValue_FieldNumber_Txset = 1,
  ConsensusValue_FieldNumber_CloseTime = 2,
  ConsensusValue_FieldNumber_PreviousProof = 3,
  ConsensusValue_FieldNumber_LedgerSeq = 4,
  ConsensusValue_FieldNumber_PreviousLedgerHash = 5,
  ConsensusValue_FieldNumber_LedgerUpgrade = 6,
  ConsensusValue_FieldNumber_Validation = 7,
};

@interface ConsensusValue : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) TransactionEnvSet *txset;
/** Test to see if @c txset has been set. */
@property(nonatomic, readwrite) BOOL hasTxset;

@property(nonatomic, readwrite) int64_t closeTime;

@property(nonatomic, readwrite, copy, null_resettable) NSData *previousProof;

@property(nonatomic, readwrite) int64_t ledgerSeq;

@property(nonatomic, readwrite, copy, null_resettable) NSData *previousLedgerHash;

@property(nonatomic, readwrite, strong, null_resettable) LedgerUpgrade *ledgerUpgrade;
/** Test to see if @c ledgerUpgrade has been set. */
@property(nonatomic, readwrite) BOOL hasLedgerUpgrade;

@property(nonatomic, readwrite, strong, null_resettable) ConsensusValueValidation *validation;
/** Test to see if @c validation has been set. */
@property(nonatomic, readwrite) BOOL hasValidation;

@end

#pragma mark - Contract

typedef GPB_ENUM(Contract_FieldNumber) {
  Contract_FieldNumber_Type = 1,
  Contract_FieldNumber_Payload = 2,
};

@interface Contract : GPBMessage

@property(nonatomic, readwrite) Contract_ContractType type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *payload;

@end

/**
 * Fetches the raw value of a @c Contract's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Contract_Type_RawValue(Contract *message);
/**
 * Sets the raw value of an @c Contract's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetContract_Type_RawValue(Contract *message, int32_t value);

#pragma mark - OperationCreateAccount

typedef GPB_ENUM(OperationCreateAccount_FieldNumber) {
  OperationCreateAccount_FieldNumber_DestAddress = 1,
  OperationCreateAccount_FieldNumber_Contract = 2,
  OperationCreateAccount_FieldNumber_Priv = 3,
  OperationCreateAccount_FieldNumber_MetadatasArray = 4,
  OperationCreateAccount_FieldNumber_InitBalance = 5,
  OperationCreateAccount_FieldNumber_InitInput = 6,
};

@interface OperationCreateAccount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *destAddress;

@property(nonatomic, readwrite, strong, null_resettable) Contract *contract;
/** Test to see if @c contract has been set. */
@property(nonatomic, readwrite) BOOL hasContract;

@property(nonatomic, readwrite, strong, null_resettable) AccountPrivilege *priv;
/** Test to see if @c priv has been set. */
@property(nonatomic, readwrite) BOOL hasPriv;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<KeyPair*> *metadatasArray;
/** The number of items in @c metadatasArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger metadatasArray_Count;

@property(nonatomic, readwrite) int64_t initBalance;

@property(nonatomic, readwrite, copy, null_resettable) NSString *initInput;
- (NSString *)initInput GPB_METHOD_FAMILY_NONE;

@end

#pragma mark - OperationSetMetadata

typedef GPB_ENUM(OperationSetMetadata_FieldNumber) {
  OperationSetMetadata_FieldNumber_Key = 1,
  OperationSetMetadata_FieldNumber_Value = 2,
  OperationSetMetadata_FieldNumber_Version = 3,
  OperationSetMetadata_FieldNumber_DeleteFlag = 4,
};

@interface OperationSetMetadata : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** Optional. The version number of metadata. If set, it must be the same as the existing metadata_version of the account. */
@property(nonatomic, readwrite) int64_t version;

@property(nonatomic, readwrite) BOOL deleteFlag;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

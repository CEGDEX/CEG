// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: consensus.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Pbft;
@class PbftCommit;
@class PbftEnv;
@class PbftNewView;
@class PbftPrePrepare;
@class PbftPrepare;
@class PbftPreparedSet;
@class PbftViewChange;
@class PbftViewChangeWithRawValue;
@class Signature;
@class Validator;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PbftMessageType

typedef GPB_ENUM(PbftMessageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PbftMessageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PbftMessageType_PbftTypePreprepare = 0,
  PbftMessageType_PbftTypePrepare = 1,
  PbftMessageType_PbftTypeCommit = 2,
  PbftMessageType_PbftTypeViewchange = 3,
  PbftMessageType_PbftTypeNewview = 4,
  PbftMessageType_PbftTypeViewchangWithRawvalue = 5,
};

GPBEnumDescriptor *PbftMessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PbftMessageType_IsValidValue(int32_t value);

#pragma mark - Enum PbftValueType

typedef GPB_ENUM(PbftValueType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PbftValueType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PbftValueType_PbftValueTx = 0,
  PbftValueType_PbftValueTxset = 1,
};

GPBEnumDescriptor *PbftValueType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PbftValueType_IsValidValue(int32_t value);

#pragma mark - Enum FeeConfig_Type

typedef GPB_ENUM(FeeConfig_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FeeConfig_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  FeeConfig_Type_Unknown = 0,
  FeeConfig_Type_GasPrice = 1,
  FeeConfig_Type_BaseReserve = 2,
};

GPBEnumDescriptor *FeeConfig_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FeeConfig_Type_IsValidValue(int32_t value);

#pragma mark - ConsensusRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ConsensusRoot : GPBRootObject
@end

#pragma mark - PbftPrePrepare

typedef GPB_ENUM(PbftPrePrepare_FieldNumber) {
  PbftPrePrepare_FieldNumber_ViewNumber = 1,
  PbftPrePrepare_FieldNumber_Sequence = 2,
  PbftPrePrepare_FieldNumber_ReplicaId = 3,
  PbftPrePrepare_FieldNumber_Value = 4,
  PbftPrePrepare_FieldNumber_ValueDigest = 5,
};

/**
 * PBFT protocol
 **/
@interface PbftPrePrepare : GPBMessage

@property(nonatomic, readwrite) int64_t viewNumber;

@property(nonatomic, readwrite) int64_t sequence;

@property(nonatomic, readwrite) int64_t replicaId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *value;

@property(nonatomic, readwrite, copy, null_resettable) NSData *valueDigest;

@end

#pragma mark - PbftPrepare

typedef GPB_ENUM(PbftPrepare_FieldNumber) {
  PbftPrepare_FieldNumber_ViewNumber = 1,
  PbftPrepare_FieldNumber_Sequence = 2,
  PbftPrepare_FieldNumber_ReplicaId = 3,
  PbftPrepare_FieldNumber_ValueDigest = 4,
};

@interface PbftPrepare : GPBMessage

@property(nonatomic, readwrite) int64_t viewNumber;

@property(nonatomic, readwrite) int64_t sequence;

@property(nonatomic, readwrite) int64_t replicaId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *valueDigest;

@end

#pragma mark - PbftCommit

typedef GPB_ENUM(PbftCommit_FieldNumber) {
  PbftCommit_FieldNumber_ViewNumber = 1,
  PbftCommit_FieldNumber_Sequence = 2,
  PbftCommit_FieldNumber_ReplicaId = 3,
  PbftCommit_FieldNumber_ValueDigest = 4,
};

@interface PbftCommit : GPBMessage

@property(nonatomic, readwrite) int64_t viewNumber;

@property(nonatomic, readwrite) int64_t sequence;

@property(nonatomic, readwrite) int64_t replicaId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *valueDigest;

@end

#pragma mark - PbftPreparedSet

typedef GPB_ENUM(PbftPreparedSet_FieldNumber) {
  PbftPreparedSet_FieldNumber_PrePrepare = 1,
  PbftPreparedSet_FieldNumber_PrepareArray = 2,
};

@interface PbftPreparedSet : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PbftEnv *prePrepare;
/** Test to see if @c prePrepare has been set. */
@property(nonatomic, readwrite) BOOL hasPrePrepare;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PbftEnv*> *prepareArray;
/** The number of items in @c prepareArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger prepareArray_Count;

@end

#pragma mark - PbftViewChange

typedef GPB_ENUM(PbftViewChange_FieldNumber) {
  PbftViewChange_FieldNumber_ViewNumber = 1,
  PbftViewChange_FieldNumber_Sequence = 2,
  PbftViewChange_FieldNumber_PrepredValueDigest = 3,
  PbftViewChange_FieldNumber_ReplicaId = 4,
};

@interface PbftViewChange : GPBMessage

/** v+1 */
@property(nonatomic, readwrite) int64_t viewNumber;

/** last execute seq */
@property(nonatomic, readwrite) int64_t sequence;

/** prepared value hash */
@property(nonatomic, readwrite, copy, null_resettable) NSData *prepredValueDigest;

@property(nonatomic, readwrite) int64_t replicaId;

@end

#pragma mark - PbftViewChangeWithRawValue

typedef GPB_ENUM(PbftViewChangeWithRawValue_FieldNumber) {
  PbftViewChangeWithRawValue_FieldNumber_ViewChangeEnv = 1,
  PbftViewChangeWithRawValue_FieldNumber_PreparedSet = 2,
};

@interface PbftViewChangeWithRawValue : GPBMessage

/** view change env */
@property(nonatomic, readwrite, strong, null_resettable) PbftEnv *viewChangeEnv;
/** Test to see if @c viewChangeEnv has been set. */
@property(nonatomic, readwrite) BOOL hasViewChangeEnv;

/** prepared messages large than n */
@property(nonatomic, readwrite, strong, null_resettable) PbftPreparedSet *preparedSet;
/** Test to see if @c preparedSet has been set. */
@property(nonatomic, readwrite) BOOL hasPreparedSet;

@end

#pragma mark - PbftNewView

typedef GPB_ENUM(PbftNewView_FieldNumber) {
  PbftNewView_FieldNumber_ViewNumber = 1,
  PbftNewView_FieldNumber_Sequence = 2,
  PbftNewView_FieldNumber_ReplicaId = 3,
  PbftNewView_FieldNumber_ViewChangesArray = 4,
  PbftNewView_FieldNumber_PrePrepare = 5,
};

@interface PbftNewView : GPBMessage

/** v+1 */
@property(nonatomic, readwrite) int64_t viewNumber;

/** sequence */
@property(nonatomic, readwrite) int64_t sequence;

@property(nonatomic, readwrite) int64_t replicaId;

/** V */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PbftEnv*> *viewChangesArray;
/** The number of items in @c viewChangesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger viewChangesArray_Count;

/** O */
@property(nonatomic, readwrite, strong, null_resettable) PbftEnv *prePrepare;
/** Test to see if @c prePrepare has been set. */
@property(nonatomic, readwrite) BOOL hasPrePrepare;

@end

#pragma mark - Pbft

typedef GPB_ENUM(Pbft_FieldNumber) {
  Pbft_FieldNumber_RoundNumber = 1,
  Pbft_FieldNumber_Type = 2,
  Pbft_FieldNumber_PrePrepare = 3,
  Pbft_FieldNumber_Prepare = 4,
  Pbft_FieldNumber_Commit = 5,
  Pbft_FieldNumber_ViewChange = 6,
  Pbft_FieldNumber_NewView = 7,
  Pbft_FieldNumber_ViewChangeWithRawvalue = 8,
};

@interface Pbft : GPBMessage

/** for send again */
@property(nonatomic, readwrite) int64_t roundNumber;

@property(nonatomic, readwrite) PbftMessageType type;

@property(nonatomic, readwrite, strong, null_resettable) PbftPrePrepare *prePrepare;
/** Test to see if @c prePrepare has been set. */
@property(nonatomic, readwrite) BOOL hasPrePrepare;

@property(nonatomic, readwrite, strong, null_resettable) PbftPrepare *prepare;
/** Test to see if @c prepare has been set. */
@property(nonatomic, readwrite) BOOL hasPrepare;

@property(nonatomic, readwrite, strong, null_resettable) PbftCommit *commit;
/** Test to see if @c commit has been set. */
@property(nonatomic, readwrite) BOOL hasCommit;

@property(nonatomic, readwrite, strong, null_resettable) PbftViewChange *viewChange;
/** Test to see if @c viewChange has been set. */
@property(nonatomic, readwrite) BOOL hasViewChange;

@property(nonatomic, readwrite, strong, null_resettable) PbftNewView *newView NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newView has been set. */
@property(nonatomic, readwrite) BOOL hasNewView;

@property(nonatomic, readwrite, strong, null_resettable) PbftViewChangeWithRawValue *viewChangeWithRawvalue;
/** Test to see if @c viewChangeWithRawvalue has been set. */
@property(nonatomic, readwrite) BOOL hasViewChangeWithRawvalue;

@end

/**
 * Fetches the raw value of a @c Pbft's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Pbft_Type_RawValue(Pbft *message);
/**
 * Sets the raw value of an @c Pbft's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPbft_Type_RawValue(Pbft *message, int32_t value);

#pragma mark - PbftEnv

typedef GPB_ENUM(PbftEnv_FieldNumber) {
  PbftEnv_FieldNumber_Pbft = 1,
  PbftEnv_FieldNumber_Signature = 2,
};

@interface PbftEnv : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Pbft *pbft;
/** Test to see if @c pbft has been set. */
@property(nonatomic, readwrite) BOOL hasPbft;

@property(nonatomic, readwrite, strong, null_resettable) Signature *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

@end

#pragma mark - Validator

typedef GPB_ENUM(Validator_FieldNumber) {
  Validator_FieldNumber_Address = 1,
  Validator_FieldNumber_PledgeCoinAmount = 2,
};

@interface Validator : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite) int64_t pledgeCoinAmount;

@end

#pragma mark - ValidatorSet

typedef GPB_ENUM(ValidatorSet_FieldNumber) {
  ValidatorSet_FieldNumber_ValidatorsArray = 1,
};

@interface ValidatorSet : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Validator*> *validatorsArray;
/** The number of items in @c validatorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger validatorsArray_Count;

@end

#pragma mark - PbftProof

typedef GPB_ENUM(PbftProof_FieldNumber) {
  PbftProof_FieldNumber_CommitsArray = 1,
};

@interface PbftProof : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PbftEnv*> *commitsArray;
/** The number of items in @c commitsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger commitsArray_Count;

@end

#pragma mark - FeeConfig

typedef GPB_ENUM(FeeConfig_FieldNumber) {
  FeeConfig_FieldNumber_GasPrice = 1,
  FeeConfig_FieldNumber_BaseReserve = 2,
};

@interface FeeConfig : GPBMessage

@property(nonatomic, readwrite) int64_t gasPrice;

@property(nonatomic, readwrite) int64_t baseReserve;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consensus.proto

namespace Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>protocol.Pbft</code>
 */
class Pbft extends \Google\Protobuf\Internal\Message
{
    /**
     *for send again
     *
     * Generated from protobuf field <code>int64 round_number = 1;</code>
     */
    private $round_number = 0;
    /**
     * Generated from protobuf field <code>.protocol.PbftMessageType type = 2;</code>
     */
    private $type = 0;
    /**
     * Generated from protobuf field <code>.protocol.PbftPrePrepare pre_prepare = 3;</code>
     */
    private $pre_prepare = null;
    /**
     * Generated from protobuf field <code>.protocol.PbftPrepare prepare = 4;</code>
     */
    private $prepare = null;
    /**
     * Generated from protobuf field <code>.protocol.PbftCommit commit = 5;</code>
     */
    private $commit = null;
    /**
     * Generated from protobuf field <code>.protocol.PbftViewChange view_change = 6;</code>
     */
    private $view_change = null;
    /**
     * Generated from protobuf field <code>.protocol.PbftNewView new_view = 7;</code>
     */
    private $new_view = null;
    /**
     * Generated from protobuf field <code>.protocol.PbftViewChangeWithRawValue view_change_with_rawvalue = 8;</code>
     */
    private $view_change_with_rawvalue = null;

    public function __construct() {
        \GPBMetadata\Consensus::initOnce();
        parent::__construct();
    }

    /**
     *for send again
     *
     * Generated from protobuf field <code>int64 round_number = 1;</code>
     * @return int|string
     */
    public function getRoundNumber()
    {
        return $this->round_number;
    }

    /**
     *for send again
     *
     * Generated from protobuf field <code>int64 round_number = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRoundNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->round_number = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftMessageType type = 2;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftMessageType type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Protocol\PbftMessageType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftPrePrepare pre_prepare = 3;</code>
     * @return \Protocol\PbftPrePrepare
     */
    public function getPrePrepare()
    {
        return $this->pre_prepare;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftPrePrepare pre_prepare = 3;</code>
     * @param \Protocol\PbftPrePrepare $var
     * @return $this
     */
    public function setPrePrepare($var)
    {
        GPBUtil::checkMessage($var, \Protocol\PbftPrePrepare::class);
        $this->pre_prepare = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftPrepare prepare = 4;</code>
     * @return \Protocol\PbftPrepare
     */
    public function getPrepare()
    {
        return $this->prepare;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftPrepare prepare = 4;</code>
     * @param \Protocol\PbftPrepare $var
     * @return $this
     */
    public function setPrepare($var)
    {
        GPBUtil::checkMessage($var, \Protocol\PbftPrepare::class);
        $this->prepare = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftCommit commit = 5;</code>
     * @return \Protocol\PbftCommit
     */
    public function getCommit()
    {
        return $this->commit;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftCommit commit = 5;</code>
     * @param \Protocol\PbftCommit $var
     * @return $this
     */
    public function setCommit($var)
    {
        GPBUtil::checkMessage($var, \Protocol\PbftCommit::class);
        $this->commit = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftViewChange view_change = 6;</code>
     * @return \Protocol\PbftViewChange
     */
    public function getViewChange()
    {
        return $this->view_change;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftViewChange view_change = 6;</code>
     * @param \Protocol\PbftViewChange $var
     * @return $this
     */
    public function setViewChange($var)
    {
        GPBUtil::checkMessage($var, \Protocol\PbftViewChange::class);
        $this->view_change = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftNewView new_view = 7;</code>
     * @return \Protocol\PbftNewView
     */
    public function getNewView()
    {
        return $this->new_view;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftNewView new_view = 7;</code>
     * @param \Protocol\PbftNewView $var
     * @return $this
     */
    public function setNewView($var)
    {
        GPBUtil::checkMessage($var, \Protocol\PbftNewView::class);
        $this->new_view = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftViewChangeWithRawValue view_change_with_rawvalue = 8;</code>
     * @return \Protocol\PbftViewChangeWithRawValue
     */
    public function getViewChangeWithRawvalue()
    {
        return $this->view_change_with_rawvalue;
    }

    /**
     * Generated from protobuf field <code>.protocol.PbftViewChangeWithRawValue view_change_with_rawvalue = 8;</code>
     * @param \Protocol\PbftViewChangeWithRawValue $var
     * @return $this
     */
    public function setViewChangeWithRawvalue($var)
    {
        GPBUtil::checkMessage($var, \Protocol\PbftViewChangeWithRawValue::class);
        $this->view_change_with_rawvalue = $var;

        return $this;
    }

}

